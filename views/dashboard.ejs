<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/public/css/style.css" />
    <script src="../public/js/dashboard.js"></script>
    <script
      lang="javascript"
      src="https://cdn.sheetjs.com/xlsx-0.20.0/package/dist/xlsx.full.min.js"
    ></script>
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"
      rel="stylesheet"
    />

    <title>DASHBOARD</title>
  </head>
  <body>
    <h1>CRM DASHBOARD</h1>
    <div class="head-back">
      <input
        type="text"
        id="searchInput"
        placeholder="Search"
        class="official-input"
      />
      <button id="addClientBoutton" class="btn btn-primary">Add client</button>
    </div>
    <div
      id="addClientmodal"
      class="modal modal-dialog-scrollable"
      style="display: none"
    >
      <div class="modal-content">
        <span class="close" id="closeModal">&times;</span>
        <h2>Add client</h2>
        <form action="/addClient" method="POST" class="official-form">
          <label for="certificationCode">Certification code :</label>
          <input
            type="text"
            id="certificationCode"
            name="certificationCode"
            class="official-input"
            required
          /><br />

          <label for="fullName">Fullname :</label>
          <input
            type="text"
            id="fullName"
            name="fullName"
            class="official-input"
            required
          /><br />

          <label for="company">Company:</label>
          <input
            type="text"
            id="company"
            name="company"
            class="official-input"
          /><br />

          <label for="position">Position :</label>
          <input
            type="text"
            id="position"
            name="position"
            class="official-input"
          /><br />

          <label for="email">Email :</label>
          <input
            type="email"
            id="email"
            name="email"
            class="official-input"
            required
          /><br />

          <label for="telephone">Telephone:</label>
          <input
            type="text"
            id="telephone"
            name="telephone"
            class="official-input"
          /><br />

          <label for="date">Date :</label>
          <input
            type="date"
            id="date"
            name="date"
            class="official-input"
          /><br />

          <label for="title">Title :</label>
          <input
            type="text"
            id="title"
            name="title"
            class="official-input"
          /><br />

          <label for="futureTopics">Future Topics:</label>
          <input
            type="text"
            id="futureTopics"
            name="futureTopics"
            class="official-input"
          /><br />
          <input type="submit" value="Add Client" id="addClientDashboard" />
        </form>
      </div>
    </div>
    <table>
      <thead>
        <tr>
          <th>Certification Code</th>
          <th>Fullname</th>
          <th>Company</th>
          <th>Position</th>
          <th>Email</th>
          <th>Telephone</th>
          <th>Date</th>
          <th>Title</th>
          <th>Future Topics</th>
          <th>Profile</th>
          <th>Delete</th>
        </tr>
      </thead>
      <tbody>
        <% training.forEach(training => { %>
        <tr class="table-row">
          <td><%= training.certificationCode %></td>
          <td><%= training.fullName %></td>
          <td><%= training.company %></td>
          <td><%= training.position %></td>
          <td><%= training.email %></td>
          <td><%= training.telephone %></td>
          <td><%= training.date %></td>
          <td><%= training.title %></td>
          <td><%= training.futureTopics %></td>
          <td><a href="/training-user/<%= training.training_id %>">See</a></td>
          <td>
            <form
              action="/delete-training/<%= training.training_id %>"
              method="post"
            >
              <button type="submit" id="delete-training-dashboard">
                Delete
              </button>
            </form>
          </td>
          <% }); %>
        </tr>
      </tbody>
    </table>

    <form
      action="/import-excel"
      method="POST"
      enctype="multipart/form-data"
      id="importExel"
      class="official-form"
    >
      <label for="excelFile">Sélectionnez un fichier Excel :</label>
      <input type="file" name="excelFile" id="excelFile" accept=".xlsx" />
      <button type="submit" id="import-excel-button">Importer Excel</button>
    </form>

    <!-- <script>
  document.addEventListener('DOMContentLoaded', () => {
    const tableRows = document.querySelectorAll('.table-row');
    const popup = document.getElementById('popup');
    const popupContent = document.getElementById('popup-content');
    const closeModalUser = document.getElementById('closeModalUser');
    const editButtons = document.querySelectorAll('.js-edit');
    const saveButtons = document.querySelectorAll('.js-save');

    const searchInput = document.querySelector('#searchInput');

    searchInput.addEventListener('input', (e) => {
      const searchTerm = e.target.value;
      const filteredRows = table.querySelectorAll('.table-row');

      filteredRows.forEach((row) => {
        const rowData = row.cells;
        const fullName = rowData[1].textContent;

        if (fullName.toLowerCase().includes(searchTerm.toLowerCase())) {
          row.style.display = 'table-row';
        } else {
          row.style.display = 'none';
        }
      });
    });
  
    editButtons.forEach(button => {
      button.addEventListener('click', function() {
        const form = this.closest('form');
        form.classList.remove('is-readonly');
        form.classList.add('is-editing');
        form.querySelectorAll('input, textarea').forEach(input => input.removeAttribute('disabled'));
      });
    });
  
    saveButtons.forEach(button => {
      button.addEventListener('click', function() {
        const form = this.closest('form');
        form.classList.remove('is-editing');
        form.classList.add('is-readonly');
        form.querySelectorAll('input, textarea').forEach(input => input.setAttribute('disabled', 'disabled'));
      });
    });
  
  
    closeModalUser.addEventListener('click', () => {
      popup.style.display = 'none';
    });
  
    window.addEventListener('click', (event) => {
      if (event.target === popup) {
        popup.style.display = 'none';
      }
    });
  
    tableRows.forEach((row) => {
      row.addEventListener('click', () => {
        const rowData = row.cells;
        const certificationCode = rowData[0].textContent;
        const fullName = rowData[1].textContent;
        const company = rowData[2].textContent;
        const position = rowData[3].textContent;
        const email = rowData[4].textContent;
        const telephone = rowData[5].textContent;
        const date = rowData[6].textContent;
        const title = rowData[7].textContent;
        const futureTopics = rowData[8].textContent;
  
        popupContent.innerHTML = `
          <h2>${fullName}</h2>
          <p>Certification Code: ${certificationCode}</p>
          <p>Company: ${company}</p>
          <p>Position: ${position}</p>
          <p>Email: ${email}</p>
          <p>Telephone: ${telephone}</p>
          <p>Date: ${date}</p>
          <p>Title: ${title}</p>
          <p>Future Topics: ${futureTopics}</p>
        `;
        popup.style.display = 'block';
      });
    });
  
    const addClientButton = document.getElementById('addClientBoutton');
    const addClientModal = document.getElementById('addClientmodal');
    const closeModal = document.getElementById('closeModal');
  
    addClientButton.addEventListener('click', () => {
      addClientModal.style.display = 'block';
    });
  
    closeModal.addEventListener('click', () => {
      addClientModal.style.display = 'none';
    });
  
    window.addEventListener('click', (event) => {
      if (event.target === addClientModal) {
        addClientModal.style.display = 'none';
      }
    });
  });
  
  </script> -->
    <!-- 
  <script src="https://unpkg.com/read-excel-file@5.x/bundle/read-excel-file.min.js"></script>

  <script>
    let input = document.getElementById('input')
    input.addEventListener('change', function() {
    readXlsxFile(input.files[0], {
    }).then(function(rows) {
    
    // Obtenir le tableau HTML
    const table = document.querySelector('table');

    // Parcourir les lignes du fichier Excel et les ajouter au tableau
    for (let i = 1; i < rows.length; i++) {
      const row = rows[i];

      // Créer une nouvelle ligne HTML
      const newRow = document.createElement('tr');

      // Parcourir les cellules de la ligne et les ajouter à la nouvelle ligne HTML
      for (let j = 0; j < row.length; j++) {
        const cell = row[j];

        const newCell = document.createElement('td');
        newCell.textContent = cell;

        newRow.appendChild(newCell);
      }

      // Ajouter la nouvelle ligne HTML au tableau
      table.appendChild(newRow);
    }
  })
}) 
  </script> -->
  </body>
</html>
